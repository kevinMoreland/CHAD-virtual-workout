[{"C:\\Users\\kmmor\\chad-virtual-workout\\src\\index.js":"1","C:\\Users\\kmmor\\chad-virtual-workout\\src\\reportWebVitals.js":"2","C:\\Users\\kmmor\\chad-virtual-workout\\src\\Welcome.js":"3","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetTime.js":"4","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetWorkout.js":"5","C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ScreenNames.js":"6","C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ExerciseGroups.js":"7","C:\\Users\\kmmor\\chad-virtual-workout\\src\\Workout.js":"8","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetRest.js":"9","C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ActivityArray.js":"10","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\ConfirmBox.js":"11","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\AlertBoxWithVideo.js":"12","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\Toast.js":"13","C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\BackgroundColorBehavior.js":"14"},{"size":8203,"mtime":1609544662203,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":466,"mtime":1609541043577,"results":"18","hashOfConfig":"16"},{"size":840,"mtime":1609540639784,"results":"19","hashOfConfig":"16"},{"size":1533,"mtime":1609540639790,"results":"20","hashOfConfig":"16"},{"size":181,"mtime":1609375480192,"results":"21","hashOfConfig":"16"},{"size":116,"mtime":1609300572651,"results":"22","hashOfConfig":"16"},{"size":5997,"mtime":1609540639806,"results":"23","hashOfConfig":"16"},{"size":1419,"mtime":1609540889539,"results":"24","hashOfConfig":"16"},{"size":183,"mtime":1609459808070,"results":"25","hashOfConfig":"16"},{"size":1221,"mtime":1609469203391,"results":"26","hashOfConfig":"16"},{"size":1337,"mtime":1609472030069,"results":"27","hashOfConfig":"16"},{"size":1002,"mtime":1609492345262,"results":"28","hashOfConfig":"16"},{"size":216,"mtime":1609544142948,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iujop5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\kmmor\\chad-virtual-workout\\src\\index.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\reportWebVitals.js",[],["62","63"],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\Welcome.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetTime.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetWorkout.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ScreenNames.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ExerciseGroups.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\Workout.js",["64","65","66"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport activityObjectElements from './variables/ActivityArray'\r\nimport screenNames from './variables/ScreenNames'\r\nimport './CenterWrapper.css';\r\nimport ConfirmBox from './SubComponents/ConfirmBox'\r\nimport Toast from './SubComponents/Toast'\r\nimport AlertBoxWithVideo from './SubComponents/AlertBoxWithVideo'\r\n\r\nfunction Workout(props) {\r\n\r\n  //------------------------\r\n  //For the pop-up boxes\r\n  const boxName = {EXIT_BOX: 'exitBox', VIDEO_BOX: 'videoBox'};\r\n  const [openExitBox, setOpenExitBox] = React.useState(false);\r\n  const [openVideoBox, setOpenVideoBox] = React.useState(false);\r\n\r\n  const handleOpenBox = (boxUsing) => {\r\n    if(!props.workoutPaused) {\r\n      props.onClickPause();\r\n    }\r\n    if(boxUsing === boxName.EXIT_BOX) {\r\n      setOpenExitBox(true);\r\n    }\r\n    else if(boxUsing === boxName.VIDEO_BOX) {\r\n      setOpenVideoBox(true);\r\n    }\r\n  };\r\n  const handleCloseBox = (boxUsing, exitConfirmed) => {\r\n    if(boxUsing === boxName.EXIT_BOX) {\r\n      setOpenExitBox(false);\r\n      if(exitConfirmed) {\r\n        props.onClickResetWorkoutData();\r\n        props.onClickNewScreen(screenNames.WELCOME, true);\r\n      }\r\n    }\r\n    else if(boxUsing === boxName.VIDEO_BOX) {\r\n      setOpenVideoBox(false);\r\n    }\r\n  };\r\n  //-------------------\r\n  const secondsToTimer = (amountTimeInSec) => {\r\n    var output = \"\";\r\n    if(Math.floor(amountTimeInSec / 60) < 10) {\r\n      output += \"0\";\r\n    }\r\n    output += Math.floor(amountTimeInSec / 60);\r\n    output += \":\"\r\n    var seconds = amountTimeInSec - (Math.floor(amountTimeInSec / 60) * 60);\r\n    if(seconds < 10) {\r\n      output += \"0\";\r\n    }\r\n    output += seconds;\r\n    return output;\r\n  }\r\n  if(props.activities == []) {\r\n    return (<div className=\"centerWrapper\"><CircularProgress /></div>);\r\n  }\r\n  else if(props.currentIndexInWorkout >= props.activities.length) {\r\n    return (<div className=\"centerWrapper\"><CircularProgress /></div>);\r\n  }\r\n  else{\r\n    let activities = props.activities;\r\n    let currentActivity = activities[props.currentIndexInWorkout];\r\n    let currentExerciseName = currentActivity[activityObjectElements.NAME];\r\n    let nextExerciseName = props.currentIndexInWorkout + 1 < activities.length ? activities[props.currentIndexInWorkout + 1][activityObjectElements.NAME] : null;\r\n    let currentExerciseDescription = currentActivity[activityObjectElements.DESC];\r\n    let timeRemaining = currentActivity[activityObjectElements.TIME_IN_SEC] - props.timeInSecIntoCurrExercise;\r\n    let isBeginningOfWorkout = (props.currentIndexInWorkout === 0 && props.timeInSecIntoCurrExercise === 0)\r\n    let numReps = currentActivity[activityObjectElements.NUM_REPS];\r\n    let numSecToDoReps = currentActivity[activityObjectElements.NUM_SEC_TO_DO_REPS];\r\n    let isForTime = (numReps == null || numSecToDoReps == null);\r\n    let openUpNextToast = (timeRemaining > 1 && timeRemaining < 10 && nextExerciseName != null);\r\n    let openRepReminderToast = (numSecToDoReps != null &&\r\n      (props.timeInSecIntoCurrExercise % numSecToDoReps > 0 && props.timeInSecIntoCurrExercise % numSecToDoReps <= 4));\r\n    var interval = null;\r\n    //do something if (props.timeInSecIntoCurrExercise) % 30 == 0  || props.timeInSecIntoCurrExercise - 1 & 30 == 0 so display changes for 2 seconds to alert user\r\n\r\n    //for how do I do this: on click, pause workout and open in an alert box a video demonstration\r\n    return (\r\n      <div className=\"centerWrapper\">\r\n        <h1 style={{fontSize: \"300%\"}}>{currentExerciseName}</h1>\r\n        <h1 style={{fontSize: \"200%\"}}>{currentExerciseDescription}</h1>\r\n        <Button color=\"primary\" onClick={()=>handleOpenBox(boxName.VIDEO_BOX)} padding={100} margin={0}>\r\n          How do I do this exercise?\r\n        </Button>\r\n        <h1 style={{fontSize: \"400%\", fontFamily: \"monospace\"}}>{secondsToTimer(timeRemaining)}</h1>\r\n        <h3 style={{fontSize: \"200%\", fontFamily: \"monospace\"}}>{secondsToTimer(props.timeLeftInWorkoutTotal)}</h3>\r\n        &nbsp;\r\n        <div>\r\n          <Button color=\"primary\"\r\n                  variant={props.workoutPaused? \"contained\" : \"outlined\"}\r\n                  onClick={props.workoutPaused ? () => props.onClickResume() : () => props.onClickPause()}>\r\n                    <h3>{props.workoutPaused ? (isBeginningOfWorkout ? \"Start!\" : \"Resume!\") : \"Pause.\"}</h3>\r\n          </Button>\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n          &nbsp;\r\n\r\n          <Button color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={()=>handleOpenBox(boxName.EXIT_BOX)}>\r\n            <h3>Cancel</h3>\r\n          </Button>\r\n        </div>\r\n        <ConfirmBox title=\"Cancel workout?\"\r\n                    description=\"Do you want to be a lazy bones and cancel this workout?\"\r\n                    handleConfirmClose={()=>handleCloseBox(boxName.EXIT_BOX, true)}\r\n                    confirmText=\"Yes.\"\r\n                    handleDeclineClose={()=>handleCloseBox(boxName.EXIT_BOX, false)}\r\n                    declineText=\"No, continue the workout!\"\r\n                    open={openExitBox}/>\r\n        <AlertBoxWithVideo title={\"Example of \" + currentExerciseName}\r\n                           videoURL=\"https://www.youtube.com/embed/EPXXI-_sugo\"\r\n                           handleClose={()=>handleCloseBox(boxName.VIDEO_BOX, null)}\r\n                           open={openVideoBox}/>\r\n\r\n        <Toast open={openUpNextToast}\r\n                message={\"Up Next: \" + nextExerciseName}\r\n                horizontalPos=\"center\"\r\n                verticalPos=\"bottom\"\r\n                type=\"info\"/>\r\n\r\n        <Toast open={openRepReminderToast}\r\n                        message={\"Do another \" + numReps + \" now!\"}\r\n                        horizontalPos=\"center\"\r\n                        verticalPos=\"top\"\r\n                        type=\"error\"/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Workout;","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SetRest.js",["67","68","69","70","71"],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\ActivityArray.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\ConfirmBox.js",[],"C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\AlertBoxWithVideo.js",["72"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction AlertBoxWithVideo(props) {\r\n    return (\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={()=>props.handleClose()}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          <iframe\r\n            id=\"video\"\r\n            width=\"560\" height=\"315\"\r\n            src={props.videoURL}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer, autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>props.handleClose()} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n\r\n}\r\n\r\nexport default AlertBoxWithVideo;","C:\\Users\\kmmor\\chad-virtual-workout\\src\\SubComponents\\Toast.js",["73"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//also accept an audio to play as option\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(0),\r\n    },\r\n    \"& .MuiAlert-icon\": {\r\n          fontSize: 0\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Toast(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={props.open} anchorOrigin={{vertical: props.verticalPos, horizontal: props.horizontalPos}}>\r\n        <Alert severity={props.type}>\r\n          <h2 style={{marginRight:24, marginLeft:20}}>{props.message}</h2>\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toast;\r\n","C:\\Users\\kmmor\\chad-virtual-workout\\src\\variables\\BackgroundColorBehavior.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":59,"column":23,"nodeType":"80","messageId":"81","endLine":59,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":75,"column":9,"nodeType":"84","messageId":"85","endLine":75,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":79,"column":9,"nodeType":"84","messageId":"85","endLine":79,"endColumn":17},{"ruleId":"82","severity":1,"message":"87","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"82","severity":1,"message":"88","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":12},{"ruleId":"78","severity":1,"message":"79","line":13,"column":62,"nodeType":"80","messageId":"81","endLine":13,"endColumn":64},{"ruleId":"78","severity":1,"message":"79","line":16,"column":62,"nodeType":"80","messageId":"81","endLine":16,"endColumn":64},{"ruleId":"78","severity":1,"message":"79","line":19,"column":62,"nodeType":"80","messageId":"81","endLine":19,"endColumn":64},{"ruleId":"89","severity":1,"message":"90","line":20,"column":11,"nodeType":"91","endLine":28,"endColumn":13},{"ruleId":"82","severity":1,"message":"92","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'isForTime' is assigned a value but never used.","Identifier","unusedVar","'interval' is assigned a value but never used.","'Paper' is defined but never used.","'Fade' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]